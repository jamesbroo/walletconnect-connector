{"version":3,"file":"walletconnect-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport { IWalletConnectProviderOptions } from '@walletconnect/types'\r\n\r\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\r\n\r\nexport interface WalletConnectConnectorArguments extends IWalletConnectProviderOptions {\r\n  supportedChainIds?: number[]\r\n}\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    this.message = 'The user rejected the request.'\r\n  }\r\n}\r\n\r\nfunction getSupportedChains({ supportedChainIds, rpc }: WalletConnectConnectorArguments): number[] | undefined {\r\n  if (supportedChainIds) {\r\n    return supportedChainIds\r\n  }\r\n\r\n  return rpc ? Object.keys(rpc).map(k => Number(k)) : undefined\r\n}\r\n\r\nexport class WalletConnectConnector extends AbstractConnector {\r\n  private readonly config: WalletConnectConnectorArguments\r\n\r\n  public walletConnectProvider?: any\r\n\r\n  constructor(config: WalletConnectConnectorArguments) {\r\n    super({ supportedChainIds: getSupportedChains(config) })\r\n\r\n    this.config = config\r\n\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleDisconnect = this.handleDisconnect.bind(this)\r\n  }\r\n\r\n  private handleChainChanged(chainId: number | string): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n    }\r\n    this.emitUpdate({ chainId })\r\n  }\r\n\r\n  private handleAccountsChanged(accounts: string[]): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n    }\r\n    this.emitUpdate({ account: accounts[0] })\r\n  }\r\n\r\n  private handleDisconnect(): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'disconnect' event\")\r\n    }\r\n    this.emitDeactivate()\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!this.walletConnectProvider) {\r\n      const WalletConnectProvider = await import('@walletconnect/ethereum-provider').then(m => m?.default ?? m)\r\n      this.walletConnectProvider = new WalletConnectProvider(this.config)\r\n    }\r\n\r\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\r\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\r\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\r\n\r\n    const account = await this.walletConnectProvider\r\n      .enable()\r\n      .then((accounts: string[]): string => accounts[0])\r\n      .catch((error: Error): void => {\r\n        // TODO ideally this would be a better check\r\n        if (error.message === 'User closed modal') {\r\n          throw new UserRejectedRequestError()\r\n        }\r\n\r\n        throw error\r\n      })\r\n\r\n    return { provider: this.walletConnectProvider, account }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.walletConnectProvider\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    return Promise.resolve(this.walletConnectProvider.chainId)\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return Promise.resolve(this.walletConnectProvider.accounts).then((accounts: string[]): string => accounts[0])\r\n  }\r\n\r\n  public deactivate() {\r\n    if (this.walletConnectProvider) {\r\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\r\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\r\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\r\n      this.walletConnectProvider.disconnect()\r\n    }\r\n  }\r\n\r\n  public async close() {\r\n    this.emitDeactivate()\r\n  }\r\n}\r\n"],"names":["URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","Error","getSupportedChains","supportedChainIds","rpc","Object","keys","map","k","Number","undefined","WalletConnectConnector","config","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","console","log","emitUpdate","accounts","account","emitDeactivate","activate","walletConnectProvider","on","enable","then","error","provider","m","WalletConnectProvider","getProvider","getChainId","Promise","resolve","getAccount","deactivate","removeListener","disconnect","close","AbstractConnector"],"mappings":"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"}