{"version":3,"file":"walletlink-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n\r\nconst CHAIN_ID = 1\r\n\r\ninterface WalletLinkConnectorArguments {\r\n  url: string\r\n  appName: string\r\n  appLogoUrl?: string\r\n  darkMode?: boolean\r\n  supportedChainIds?: number[]\r\n}\r\n\r\nexport class WalletLinkConnector extends AbstractConnector {\r\n  private readonly url: string\r\n  private readonly appName: string\r\n  private readonly appLogoUrl?: string\r\n  private readonly darkMode: boolean\r\n\r\n  public walletLink: any\r\n  private provider: any\r\n\r\n  constructor({ url, appName, appLogoUrl, darkMode, supportedChainIds }: WalletLinkConnectorArguments) {\r\n    super({ supportedChainIds: supportedChainIds })\r\n\r\n    this.url = url\r\n    this.appName = appName\r\n    this.appLogoUrl = appLogoUrl\r\n    this.darkMode = darkMode || false\r\n\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    // @ts-ignore\r\n    if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\r\n      // user is in the dapp browser on Coinbase Wallet\r\n      this.provider = window.ethereum\r\n    } else if (!this.walletLink) {\r\n      const WalletLink = await import('walletlink').then(m => m?.default ?? m)\r\n      this.walletLink = new WalletLink({\r\n        appName: this.appName,\r\n        darkMode: this.darkMode,\r\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\r\n      })\r\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\r\n    }\r\n\r\n    const accounts = await this.provider.request({\r\n      method: 'eth_requestAccounts'\r\n    })\r\n    const account = accounts[0]\r\n\r\n    this.provider.on('chainChanged', this.handleChainChanged)\r\n    this.provider.on('accountsChanged', this.handleAccountsChanged)\r\n\r\n    return { provider: this.provider, account: account }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.provider.chainId\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    const accounts = await this.provider.request({\r\n      method: 'eth_requestAccounts'\r\n    })\r\n    return accounts[0]\r\n  }\r\n\r\n  public deactivate() {\r\n    this.provider.removeListener('chainChanged', this.handleChainChanged)\r\n    this.provider.removeListener('accountsChanged', this.handleAccountsChanged)\r\n  }\r\n\r\n  public async close() {\r\n    this.provider.close()\r\n    this.emitDeactivate()\r\n  }\r\n\r\n  private handleChainChanged(chainId: number | string): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n    }\r\n    this.emitUpdate({ chainId: chainId })\r\n  }\r\n\r\n  private handleAccountsChanged(accounts: string[]): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n    }\r\n    this.emitUpdate({ account: accounts[0] })\r\n  }\r\n}\r\n"],"names":["url","appName","appLogoUrl","darkMode","supportedChainIds","handleChainChanged","_this","bind","handleAccountsChanged","activate","_this3","provider","request","method","accounts","account","on","this","window","ethereum","isCoinbaseWallet","walletLink","then","m","WalletLink","makeWeb3Provider","getProvider","getChainId","chainId","getAccount","deactivate","removeListener","close","emitDeactivate","emitUpdate","AbstractConnector"],"mappings":"uiBAsBgBA,IAAAA,IAAKC,IAAAA,QAASC,IAAAA,WAAYC,IAAAA,8BAChC,CAAEC,oBADwCA,2BAG3CJ,IAAMA,IACNC,QAAUA,IACVC,WAAaA,IACbC,SAAWA,IAAY,IAEvBE,mBAAqBC,EAAKD,mBAAmBE,aAC7CC,sBAAwBF,EAAKE,sBAAsBD,wHAG7CE,gEAeYC,EAAKC,SAASC,QAAQ,CAC3CC,OAAQ,wCADJC,OAGAC,EAAUD,EAAS,YAEpBH,SAASK,GAAG,eAAgBN,EAAKL,sBACjCM,SAASK,GAAG,kBAAmBN,EAAKF,uBAElC,CAAEG,SAAUD,EAAKC,SAAUI,QAASA,SAnBzCE,qBAFEC,OAAOC,WAAiD,IAArCD,OAAOC,SAASC,mBAEhCT,SAAWO,OAAOC,mCACbT,EAAKW,kCACU,8QAAO,mBAAcC,MAAK,SAAAC,+BAAKA,SAAAA,aAAcA,qBAAhEC,KACDH,WAAa,IAAIG,KACpBvB,QAASS,EAAKT,QACdE,SAAUO,EAAKP,UACXO,EAAKR,WAAa,CAAEA,WAAYQ,EAAKR,YAAe,OAErDS,SAAWD,EAAKW,WAAWI,iBAAiBf,EAAKV,IA3C3C,8IAyDF0B,kDACJT,KAAKN,gDAGDgB,iDACJV,KAAKN,SAASiB,+CAGVC,iDACYZ,KAAKN,SAASC,QAAQ,CAC3CC,OAAQ,wCADJC,UAGCA,EAAS,4CAGXgB,WAAA,gBACAnB,SAASoB,eAAe,eAAgBd,KAAKZ,yBAC7CM,SAASoB,eAAe,kBAAmBd,KAAKT,0BAG1CwB,4BACXf,KAAKN,SAASqB,QAAdf,KACKgB,yEAGC5B,mBAAA,SAAmBuB,QAIpBM,WAAW,CAAEN,QAASA,OAGrBpB,sBAAA,SAAsBM,QAIvBoB,WAAW,CAAEnB,QAASD,EAAS,SAnFCqB"}