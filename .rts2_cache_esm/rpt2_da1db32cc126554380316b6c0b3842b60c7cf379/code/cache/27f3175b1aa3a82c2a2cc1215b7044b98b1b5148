{"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\r\nexport const URI_AVAILABLE = 'URI_AVAILABLE';\r\nexport class UserRejectedRequestError extends Error {\r\n    constructor() {\r\n        super();\r\n        this.name = this.constructor.name;\r\n        this.message = 'The user rejected the request.';\r\n    }\r\n}\r\nfunction getSupportedChains({ supportedChainIds, rpc }) {\r\n    if (supportedChainIds) {\r\n        return supportedChainIds;\r\n    }\r\n    return rpc ? Object.keys(rpc).map(k => Number(k)) : undefined;\r\n}\r\nexport class WalletConnectConnector extends AbstractConnector {\r\n    constructor(config) {\r\n        super({ supportedChainIds: getSupportedChains(config) });\r\n        this.config = config;\r\n        this.handleChainChanged = this.handleChainChanged.bind(this);\r\n        this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\r\n        this.handleDisconnect = this.handleDisconnect.bind(this);\r\n    }\r\n    handleChainChanged(chainId) {\r\n        if (__DEV__) {\r\n            console.log(\"Handling 'chainChanged' event with payload\", chainId);\r\n        }\r\n        this.emitUpdate({ chainId });\r\n    }\r\n    handleAccountsChanged(accounts) {\r\n        if (__DEV__) {\r\n            console.log(\"Handling 'accountsChanged' event with payload\", accounts);\r\n        }\r\n        this.emitUpdate({ account: accounts[0] });\r\n    }\r\n    handleDisconnect() {\r\n        if (__DEV__) {\r\n            console.log(\"Handling 'disconnect' event\");\r\n        }\r\n        this.emitDeactivate();\r\n    }\r\n    async activate() {\r\n        if (!this.walletConnectProvider) {\r\n            const WalletConnectProvider = await import('@walletconnect/ethereum-provider').then(m => m?.default ?? m);\r\n            this.walletConnectProvider = new WalletConnectProvider(this.config);\r\n        }\r\n        this.walletConnectProvider.on('chainChanged', this.handleChainChanged);\r\n        this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged);\r\n        this.walletConnectProvider.on('disconnect', this.handleDisconnect);\r\n        const account = await this.walletConnectProvider\r\n            .enable()\r\n            .then((accounts) => accounts[0])\r\n            .catch((error) => {\r\n            // TODO ideally this would be a better check\r\n            if (error.message === 'User closed modal') {\r\n                throw new UserRejectedRequestError();\r\n            }\r\n            throw error;\r\n        });\r\n        return { provider: this.walletConnectProvider, account };\r\n    }\r\n    async getProvider() {\r\n        return this.walletConnectProvider;\r\n    }\r\n    async getChainId() {\r\n        return Promise.resolve(this.walletConnectProvider.chainId);\r\n    }\r\n    async getAccount() {\r\n        return Promise.resolve(this.walletConnectProvider.accounts).then((accounts) => accounts[0]);\r\n    }\r\n    deactivate() {\r\n        if (this.walletConnectProvider) {\r\n            this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect);\r\n            this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged);\r\n            this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged);\r\n            this.walletConnectProvider.disconnect();\r\n        }\r\n    }\r\n    async close() {\r\n        this.emitDeactivate();\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","references":["E:/InProgress/walletconnect-connector/node_modules/@web3-react/types/dist/index.d.ts","E:/InProgress/walletconnect-connector/node_modules/@web3-react/abstract-connector/dist/index.d.ts","E:/InProgress/walletconnect-connector/node_modules/@walletconnect/types/index.d.ts","E:/InProgress/walletconnect-connector/node_modules/@walletconnect/ethereum-provider/dist/cjs/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"E:/InProgress/walletconnect-connector/src/index.d.ts","writeByteOrderMark":false,"text":"import { ConnectorUpdate } from '@web3-react/types';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport { IWalletConnectProviderOptions } from '@walletconnect/types';\r\nexport declare const URI_AVAILABLE = \"URI_AVAILABLE\";\r\nexport interface WalletConnectConnectorArguments extends IWalletConnectProviderOptions {\r\n    supportedChainIds?: number[];\r\n}\r\nexport declare class UserRejectedRequestError extends Error {\r\n    constructor();\r\n}\r\nexport declare class WalletConnectConnector extends AbstractConnector {\r\n    private readonly config;\r\n    walletConnectProvider?: any;\r\n    constructor(config: WalletConnectConnectorArguments);\r\n    private handleChainChanged;\r\n    private handleAccountsChanged;\r\n    private handleDisconnect;\r\n    activate(): Promise<ConnectorUpdate>;\r\n    getProvider(): Promise<any>;\r\n    getChainId(): Promise<number | string>;\r\n    getAccount(): Promise<null | string>;\r\n    deactivate(): void;\r\n    close(): Promise<void>;\r\n}\r\n"}}
